
APP_USER=app-$(APP)
APP_HOME=/home/$(APP_USER)/

SSH_HOME=$(APP_HOME).ssh/

SSH_A=/var/lib/ikari/keys/$(APP_USER)
SSH_A_PUB=$(SSH_A).pub

SSH_H=$(SSH_HOME)id_rsa
SSH_H_PUB=$(SSH_H).pub

# targets
#########

RE=make -f $(ME) APP=$(APP) -s

# SSH
$(SSH_A):
	ssh-keygen -f $@ -N ""

ssh_a:
	sudo $(RE) $(SSH_A)

$(SSH_H): $(SSH_A)
	[ -d $(SSH_HOME) ] || mkdir $(SSH_HOME)
	cp $(SSH_A) $(SSH_H)
	cp $(SSH_A_PUB) $(SSH_H_PUB)
	chown $(APP_USER) -R $(SSH_HOME)	

ssh_h:
	[ -d $(APP_HOME) ] && sudo $(RE) $(SSH_H) || true

setup_key: ssh_a ssh_h

update_code:
	sh -c 'cd $(APP_HOME)/serve && \
	    (git reset --hard ; \
	    git pull --rebase )'

setup_venv:
	$(APP_HOME)/serve/env/bin/pip install -r requirements.txt --upgrade


$(APP_HOME)/serve/env/bin/buildout:
	$(APP_HOME)/serve/env/bin/pip install zc.buildout

$(APP_HOME)/serve/env/bin/python:
	virtualenv $(APP_HOME)/serve/env

setup_buldout: $(APP_HOME)/serve/env/bin/buildout
	$< -s

setup_repo: $(APP_HOME)/serve/env/bin/python
	[ -f $(APP_HOME)/serve/buildout.cfg ] && $(RE) setup_buldout || true
	[ -f $(APP_HOME)/serve/requirements.txt ] && $(RE) setup_venv || true

$(APP_HOME)/serve:
	git clone $(URL) $(APP_HOME)/serve

clone_code: $(APP_HOME)/serve

fetch_key:
	cat $(SSH_A_PUB)

fetch_rev_in:
	sh -c 'cd $(APP_HOME)/serve && \
	    git log -n 1 --format="%h %s"'

fetch_rev:
	sudo -u $(APP_USER) $(RE) fetch_rev_in

fetch_status:
	nc localhost 1235

fetch_status_app:
	nc -U /tmp/$(APP_USER).stats.sock
